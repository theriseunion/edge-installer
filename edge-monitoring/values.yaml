# Edge 监控套件配置
# 可选择性安装 Prometheus/Grafana/AlertManager

# 全局配置
global:
  # 是否启用监控套件
  enabled: true
  # 命名空间
  namespace: observability-system

# Prometheus 配置
prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: v2.45.0
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 9090

  # 存储配置
  persistence:
    enabled: true
    size: 20Gi
    storageClassName: ""

  # 资源限制
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  # 配置文件
  config:
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    rule_files:
      - "/etc/prometheus/rules/*.yml"
    scrape_configs:
      - job_name: 'edge-apiserver'
        static_configs:
          - targets: ['edge-apiserver:8083']
        metrics_path: '/metrics'
      - job_name: 'edge-controller'
        static_configs:
          - targets: ['edge-controller:8082']
        metrics_path: '/metrics'
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['edge-kube-state-metrics:8080']
        metrics_path: '/metrics'
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_endpoints_name]
            action: keep
            regex: edge-node-exporter
      # Kubernetes 集群基础监控
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # Edge 平台标签映射
          - source_labels: [__meta_kubernetes_node_label_theriseunion_io_nodegroup]
            target_label: nodegroup
          - source_labels: [__meta_kubernetes_node_label_theriseunion_io_managed]
            target_label: edge_managed
          - source_labels: [__meta_kubernetes_node_label_theriseunion_io_username]
            target_label: creator
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      - job_name: 'kubernetes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # Edge 平台标签映射
          - source_labels: [__meta_kubernetes_node_label_theriseunion_io_nodegroup]
            target_label: nodegroup
          - source_labels: [__meta_kubernetes_node_label_theriseunion_io_managed]
            target_label: edge_managed
          - source_labels: [__meta_kubernetes_node_label_theriseunion_io_username]
            target_label: creator
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          # Pod Edge 平台标签映射
          - source_labels: [__meta_kubernetes_pod_label_theriseunion_io_workspace]
            target_label: workspace
          - source_labels: [__meta_kubernetes_pod_label_theriseunion_io_managed]
            target_label: edge_managed
          - source_labels: [__meta_kubernetes_pod_label_theriseunion_io_username]
            target_label: creator
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

# Grafana 配置
grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: 10.0.0
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 3000

  # 默认管理员密码
  adminPassword: admin123

  # 持久化存储
  persistence:
    enabled: true
    size: 10Gi
    storageClassName: ""

  # 资源限制
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

  # 数据源配置
  datasources:
    - name: Prometheus
      type: prometheus
      url: http://edge-prometheus:9090
      access: proxy
      isDefault: true

# AlertManager 配置
alertmanager:
  enabled: true
  image:
    repository: prom/alertmanager
    tag: v0.25.0
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 9093

  # 资源限制
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

  # 告警配置
  config:
    global:
      smtp_smarthost: 'localhost:587'
      smtp_from: 'alertmanager@edge.local'
    route:
      group_by: ['alertname']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
    receivers:
      - name: 'web.hook'
        webhook_configs:
          - url: 'http://127.0.0.1:5001/'

# Kube-state-metrics 配置
kubeStateMetrics:
  enabled: true
  image:
    repository: registry.k8s.io/kube-state-metrics/kube-state-metrics
    tag: v2.10.0
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 8080

  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"

# Node-exporter 配置
nodeExporter:
  enabled: true
  image:
    repository: prom/node-exporter
    tag: v1.6.0
    pullPolicy: IfNotPresent

  # 以 DaemonSet 方式部署到所有节点
  hostNetwork: true
  hostPID: true

  service:
    type: ClusterIP
    port: 9100

  resources:
    requests:
      memory: "32Mi"
      cpu: "25m"
    limits:
      memory: "64Mi"
      cpu: "50m"

# ServiceMonitor 配置 - 自动发现服务
serviceMonitor:
  enabled: false
  # 为 edge 组件创建 ServiceMonitor
  targets:
    - name: edge-apiserver
      service: edge-apiserver
      port: metrics
      path: /metrics
    - name: edge-controller
      service: edge-controller
      port: metrics
      path: /metrics