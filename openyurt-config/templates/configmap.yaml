apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.configMap.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: yurt-hub
    app.kubernetes.io/name: openyurt
    app.kubernetes.io/component: yurt-hub
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
data:
  {{- if .Values.openyurt.apiServer.endpoint }}
  # YurtHub static Pod manifest
  # This Pod will be deployed on edge nodes to provide local Kubernetes API caching
  yurthub: |
    apiVersion: v1
    kind: Pod
    metadata:
      labels:
        k8s-app: yurt-hub
      name: yurt-hub
      namespace: {{ .Values.namespace }}
    spec:
      containers:
      - name: yurt-hub
        image: {{ .Values.configMap.data.yurtHubImage }}
        imagePullPolicy: IfNotPresent
        command:
        - yurthub
        - --v=2
        - --bind-address=127.0.0.1
        - --server-addr={{ .Values.openyurt.apiServer.endpoint }}
        - --node-name=$(NODE_NAME)
        - --bootstrap-file=/var/lib/yurthub/bootstrap-hub.conf
        - --working-mode={{ .Values.configMap.data.workingMode }}
        - --namespace={{ .Values.namespace }}
        - --hub-cert-organizations={{ .Values.openyurt.certificates.organization }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /v1/healthz
            port: {{ .Values.configMap.data.yurtHubProxyPort }}
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            host: 127.0.0.1
            path: /v1/readyz
            port: {{ .Values.configMap.data.yurtHubProxyPort }}
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 20
          failureThreshold: 3
        resources:
          requests:
            cpu: 150m
            memory: 150Mi
          limits:
            memory: 300Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        volumeMounts:
        - name: hub-dir
          mountPath: /var/lib/yurthub
        - name: kubernetes
          mountPath: /etc/kubernetes
      hostNetwork: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      priority: 2000001000
      priorityClassName: system-node-critical
      nodeSelector:
        openyurt.io/is-edge-worker: "true"
      volumes:
      - name: hub-dir
        hostPath:
          path: /var/lib/yurthub
          type: DirectoryOrCreate
      - name: kubernetes
        hostPath:
          path: /etc/kubernetes
          type: Directory
  {{- else }}
  {{- fail "openyurt.apiServer.endpoint is required. Please set it in values.yaml or via --set openyurt.apiServer.endpoint=https://<master-ip>:6443" }}
  {{- end }}
